{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-spot/add-spot.component.ts","./src/app/add-spot/add-spot.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/imageviewer/image-viewer.component.ts","./src/app/imageviewer/image-viewer.component.html","./src/app/spot.model.ts","./src/app/spot.service.ts","./src/app/spot/spot.component.html","./src/app/spot/spot.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Spot} from '../spot.model';\nimport {SpotService} from '../spot.service';\n\n@Component({\n  selector: 'app-add-spot',\n  templateUrl: './add-spot.component.html',\n  styleUrls: ['./add-spot.component.css']\n})\nexport class AddSpotComponent implements OnInit {\n\n  spot: Spot = new Spot();\n  submitted = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private spotService: SpotService) {}\n\n  ngOnInit() {\n    const spotId = this.route.snapshot.paramMap.get('id');\n    this.spotService.getSpotById(+spotId)\n      .subscribe( data => {\n        this.spot = data;\n      });\n  }\n\n  createSpot(spot): void {\n    this.submitted = true;\n    this.spot.name = spot.name;\n    this.spotService.createSpot(this.spot)\n      .subscribe(data => {\n        // alert('Spot created successfully.');\n        // TODO message saved successfully\n        this.router.navigate(['/spots']);\n      });\n  }\n\n  // TODO fix warnings here\n  backButtonClick = function () {\n    this.router.navigate(['/spots']);\n  };\n\n\n}\n","<div class=\"col-md-6\" [hidden]=\"submitted\">\n  <h2 class=\"text-center\">Add Spot</h2>\n  <form (ngSubmit)=\"createSpot(spot)\" #spotForm=\"ngForm\">\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"name\">Name:</mat-label>\n        <input matInput [(ngModel)]=\"spot.name\" placeholder=\"Name\" name=\"name\" class=\"form-control\" id=\"name\"\n               required minlength=\"4\" #name=\"ngModel\">\n\n        <div [hidden]=\"name.valid || name.pristine\"\n             class=\"alert alert-danger\">\n          Name is required\n        </div>\n\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"country\">Country:</mat-label>\n        <input matInput [(ngModel)]=\"spot.country\" placeholder=\"Country\" name=\"country\" class=\"form-control\"\n               id=\"country\" required minlength=\"4\" #country=\"ngModel\">\n        <div [hidden]=\"country.valid || country.pristine\"\n             class=\"alert alert-danger\">\n          Country is required\n        </div>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"city\">City:</mat-label>\n        <input matInput [(ngModel)]=\"spot.city\" placeholder=\"City\" name=\"city\" class=\"form-control\" id=\"city\" required minlength=\"4\"\n               #city=\"ngModel\">\n        <div [hidden]=\"city.valid || city.pristine\"\n             class=\"alert alert-danger\">\n          City is required\n        </div>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"continent\">Continent:</mat-label>\n        <mat-select name=\"select\" [(ngModel)]=\"spot.continent\" required>\n          <mat-option value=\"Europe\">Europe</mat-option>\n          <mat-option value=\"Africa\">Africa</mat-option>\n          <mat-option value=\"Asia\">Asia</mat-option>\n          <mat-option value=\"America\">America</mat-option>\n          <mat-option value=\"Australia\">Australia</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"notes\">Notes:</mat-label>\n        <input matInput [(ngModel)]=\"spot.notes\" placeholder=\"Notes\" name=\"notes\" class=\"form-control\"\n               id=\"notes\" #notes=\"ngModel\">\n      </mat-form-field>\n    </div>\n    <button mat-icon-button type=\"submit\" color=\"primary\"\n             [disabled]=\"!spotForm.form.valid\"><mat-icon>save</mat-icon></button>\n    <button mat-icon-button color=\"primary\" class=\"mdc-icon-button material-icons\" (click)=\"backButtonClick()\">\n      <mat-icon>cancel</mat-icon>\n    </button>\n  </form>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SpotComponent } from './spot/spot.component';\nimport {AddSpotComponent} from './add-spot/add-spot.component';\nimport {ImageViewerComponent} from './imageviewer/image-viewer.component';\n\n\nconst routes: Routes = [\n  { path: 'spots', component: SpotComponent },\n  { path: 'edit/:id', component: AddSpotComponent },\n  { path: 'imageviewer/:id', component: ImageViewerComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    // CommonModule,\n    // CommonModule,\r\nRouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularPetApp';\n}\n","<mat-toolbar>\n  <span><button mat-raised-button color=\"primary\" routerLink=\"/spots\"> List bucket list</button></span>\n  <span><button mat-raised-button color=\"primary\" routerLink=\"/edit/0\">Add Spot</button></span>\n</mat-toolbar>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { SpotComponent } from './spot/spot.component';\nimport { AddSpotComponent } from './add-spot/add-spot.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {SpotService} from './spot.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ImageViewerComponent } from './imageviewer/image-viewer.component';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpotComponent,\n    AddSpotComponent,\n    ImageViewerComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTableModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule,\n        BrowserAnimationsModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        MatCheckboxModule\n    ],\n  providers: [SpotService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n// import {NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions} from 'ngx-gallery';\nimport {SpotService} from '../spot.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FileUploader} from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-imageviewer',\n  templateUrl: './image-viewer.component.html',\n  styleUrls: ['./image-viewer.component.css']\n})\nexport class ImageViewerComponent implements OnInit {\n\n  //galleryOptions: NgxGalleryOptions[];\n  //galleryImages: NgxGalleryImage[] = [];\n  spotId: string;\n\n  @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\n\n  uploader: FileUploader;\n\n  constructor(private spotService: SpotService, private route: ActivatedRoute, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.spotId = this.route.snapshot.paramMap.get('id');\n    const headers = [{name: 'Accept', value: 'application/json'}];\n    // TODO improve upload handling allow and implement delete\n    this.uploader = new FileUploader({url: 'http://localhost:8080/api/files/' + this.spotId, autoUpload: true, headers: headers});\n\n    this.uploader.onCompleteAll = () => {\n      // TODO find nicer solution for refresh\n      this.router.navigateByUrl('/').then(() =>\n        this.router.navigate(['/imageviewer/', this.spotId]));\n    };\n\n    /*this.galleryOptions = [\n      {\n        width: '600px',\n        height: '400px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: '100%',\n        height: '600px',\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20\n      },\n      // max-width 400\n      {\n        breakpoint: 400,\n        preview: false\n      }\n    ];*/\n\n    this.spotService.getImagesBySpotId(this.spotId).subscribe(data => {\n      /*data.forEach(image => this.galleryImages.push({\n        small: image.url,\n        medium: image.url,\n        big: image.url\n      }));*/\n\n    });\n  }\n}\n","<div><!--<ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>--></div>\n<div>\n  <!--<input #fileInput type=\"file\" ng2FileSelect [uploader]=\"uploader\"/>-->\n</div>\n","export class Spot {\n  id: number;\n  name: string;\n  country: string;\n  city: string;\n  continent: string;\n  notes: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Spot} from './spot.model';\nimport {ImageSource} from './imagesource.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getSpots() {\n    return this.http.get<Spot[]>('http://localhost:8080/getAllSpots');\n  }\n\n  public createSpot(spot) {\n    return this.http.post<Spot>('http://localhost:8080/saveSpot', spot);\n  }\n\n  public getSpotById(id: number) {\n    return this.http.get<Spot>('http://localhost:8080/getSpot/' + id);\n  }\n\n  // TODO make its own service\n  public getImagesBySpotId(spotId: string) {\n    return this.http.get<ImageSource[]>('http://localhost:8080/getImages/' + spotId);\n  }\n}\n","<div class=\"col-md-6\">\n  <h2> Spot Details</h2>\n\n\n  <table mat-table [dataSource]=\"spots\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"city\">\n      <th mat-header-cell *matHeaderCellDef> City</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.city}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"country\">\n      <th mat-header-cell *matHeaderCellDef> Country</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.country}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"continent\">\n      <th mat-header-cell *matHeaderCellDef> Continent</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.continent}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notes\">\n      <th mat-header-cell *matHeaderCellDef> Notes</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.notes}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"visited\">\n      <th mat-header-cell *matHeaderCellDef> Visited</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox class=\"example-margin\" [checked]=\"element.visited\"></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef> Action</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-raised-button color=\"primary\" class=\"mdc-icon-button material-icons\"\n                (click)=\"editSpot(element.id)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-raised-button color=\"primary\" class=\"mdc-icon-button material-icons\"\n                routerLink=\"/imageviewer/{{element.id}}\">\n          <mat-icon>crop_original</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Spot } from '../spot.model';\nimport { SpotService } from '../spot.service';\n// import { SPOTS } from '../mock-spots';\n\n@Component({\n  selector: 'app-spot',\n  templateUrl: './spot.component.html',\n  styleUrls: ['./spot.component.css']\n})\nexport class SpotComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'city', 'country', 'continent', 'visited','notes', 'action'];\n\n  spots: Spot[];\n\n  constructor(private router: Router, private spotService: SpotService) { }\n\n  ngOnInit() {\n    this.spotService.getSpots()\n      .subscribe( data => {\n        this.spots = data;\n      });\n    // this.spots = SPOTS;\n  }\n\n  editSpot(id) {\n    this.router.navigate(['/edit/', id]);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}